model Course {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name String @unique
    slug String @unique

    img String

    description Json

    chapters CourseChapter[]

    product   Product @relation(fields: [productId], references: [id])
    productId Int     @unique @map("product_id")

    completeCourses CompleteCourses[]

    BoughtCourses BoughtCourses[]
}

model CourseChapter {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name String

    test Test?

    lection Lection?

    course   Course? @relation(fields: [courseId], references: [id])
    courseId Int?    @map("course_id")

    completeCourseChapters CompleteCourseChapters[]
}

model BoughtCourses {
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    user     User   @relation(fields: [userId], references: [id])
    userId   Int    @map("user_id")
    course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
    courseId Int    @map("course_id")

    @@id([userId, courseId])
}

model CompleteCourseChapters {
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    user            User          @relation(fields: [userId], references: [id])
    userId          Int           @map("user_id")
    courseChapter   CourseChapter @relation(fields: [courseChapterId], references: [id], onDelete: Cascade)
    courseChapterId Int           @map("course_chapter_id")

    @@id([userId, courseChapterId])
}

model CompleteCourses {
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    user     User   @relation(fields: [userId], references: [id])
    userId   Int    @map("user_id")
    course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
    courseId Int    @map("course_id")

    @@id([userId, courseId])
}
