model ScheduleWeek {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    week_start_meta String @unique
    week_end_meta   String @unique

    week_start String
    week_end   String

    days ScheduleDay[]
}

model ScheduleDay {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    date String @unique

    day_of_week String

    day_month String

    time ScheduleTime[]

    scheduleWeek   ScheduleWeek? @relation(fields: [scheduleWeekId], references: [id], onDelete: Cascade)
    scheduleWeekId Int?
}

model ScheduleTime {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    time String

    status ScheduleTimeEnum @default(FREE)

    student   User? @relation(fields: [studentId], references: [id], "scheduleTimeStudent", onDelete: Cascade)
    studentId Int?

    teacher   User? @relation(fields: [teacherId], references: [id], "scheduleTimeTeacher", onDelete: Cascade)
    teacherId Int?

    sheduleDay    ScheduleDay? @relation(fields: [scheduleDayId], references: [id], onDelete: Cascade)
    scheduleDayId Int?
}

enum ScheduleTimeEnum {
    FREE
    PENDING
    SELECTED
    END
}
