model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    email    String @unique
    name     String
    surname  String
    family   String
    phone    String @unique
    password String
    social   String
    region   String
    birthday String

    tg_id String?

    active Boolean

    role EnumUserRoles

    avatar   LocalFile? @relation(fields: [avatarId], references: [id]) // references `id` of `Profile`
    avatarId Int?       @unique // relation scalar field (used in the `@relation` attribute above)

    scheduleTimeStudent ScheduleTime[] @relation("scheduleTimeStudent")

    scheduleTimeTeacher ScheduleTime[] @relation("scheduleTimeTeacher")

    completeTests          CompleteTest[]
    completeLection        CompleteLections[]
    completeCourseChapters CompleteCourseChapters[]
    completeCourses        CompleteCourses[]

    boughtCourses BoughtCourses[]

    orders   Order[]
    supports Support[]
}

enum EnumUserRoles {
    USER
    STUDENT
    TEACHER
    ADMIN
}
