import { Action, InjectBot, On, Start, Update } from 'nestjs-telegraf';
import { UserService } from 'src/user/user.service';
import { Context, Markup, Telegraf } from 'telegraf';

@Update()
export class BotUpdate {
  constructor(
    @InjectBot() readonly bot: Telegraf<Context>,
    private userService: UserService,
  ) {}

  @Start()
  async startBot(ctx: Context) {
    await ctx.reply('–ö—É!');

    ctx.reply(
      '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞',
      Markup.keyboard([
        Markup.button.contactRequest('üì≤ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º', true),
      ]),
    );
  }

  @On('contact')
  async contact(ctx: Context) {
    const user = await this.userService.getByPhoneNumber(
      // @ts-ignore
      ctx.message.contact.phone_number,
    );

    if (!user) {
      await ctx.reply(
        '–í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Verdera, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ verdera.ru',
      );
    } else {
      if (user.role == 'USER') {
        await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ä–æ–ª–∏');
      } else {
        if (user.tg_id) {
          if (user.role == 'ADMIN') {
            // await ctx.reply(
            //   '–ü–æ–ª—É—á–∏—Ç—å –ª–µ–∫—Ü–∏–∏?',
            //   Markup.keyboard([
            //     Markup.button.callback('–î–∞', '/lections', true),
            //     Markup.button.callback('–ù–µ—Ç', '1', true),
            //   ]),
            // );
            return ctx.reply(
              '–ü–æ–ª—É—á–∏—Ç—å –ª–µ–∫—Ü–∏–∏?',
              Markup.keyboard([
                Markup.button.callback('–î–∞', '/lections', true),
              ]),
            );
          }
        } else {
          await this.userService.addTgId(
            ctx.message.chat.id.toString(),
            user.id,
          );
          await ctx.reply('–í–∞—à tg id —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!');
        }
      }
    }
  }

  @Action('lections')
  async lections(ctx: Context) {
    console.log('qwe');
    const user = await this.userService.getByChatId(
      // @ts-ignore
      ctx.message.from.id.toString(),
    );

    if (!user) {
      await ctx.reply(
        '–í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Verdera, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ verdera.ru',
      );
    } else {
      if (user.role !== 'STUDENT' && user.role !== 'ADMIN') {
        await ctx.reply('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º Verdera');
      } else {
        await ctx.reply(
          '–ö –∫–∞–∫–æ–π –ª–µ–∫—Ü–∏–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã?',
          Markup.keyboard(
            user.boughtCourses.map((item) =>
              Markup.button.callback(item.course.name, 'lection', true),
            ),
          ),
        );
      }
    }
  }

  // @Action('lection')
  // async lection(ctx: Context) {
  //   console.log(ctx);
  // }

  async notificate(userTgId: number[], message: string) {
    userTgId.map(
      async (item) => await this.bot.telegram.sendMessage(item, message),
    );
  }
}
// –ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ç
// –≤–∏–¥–æ—Å –∞–π—Ñ–æ–Ω
// FAQ —Ñ–æ—Ä–º–∞ DONE
// —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤ DONE
// –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–≤–∞—Ä–µ –∑–µ–ª—ë–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ DONE
// —Å—Ç—Ä–µ–ª–æ—á–∫–∞ –Ω–∞–≤–µ—Ä—Ö
// —É–±—Ä–∞—Ç—å –≤–∞—Ç—Å–∞–ø DONE
// –∑–∞–∫–∞–∑—ã DONE
// —à–∞–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ DONE

// –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∫—Ä–∞—Å–∏–≤–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è

// 3 –≤–∏–¥–µ–æ –∏ —Ç–µ—Å—Ç—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
