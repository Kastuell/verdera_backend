import { InjectBot, On, Start, Update } from 'nestjs-telegraf';
import { Context, Telegraf } from 'telegraf';
import { BotService } from './bot.service';

@Update()
export class BotUpdate {
  constructor(
    @InjectBot() readonly bot: Telegraf<Context>,
    private readonly botService: BotService,
  ) {}

  @Start()
  async startBot(ctx: Context) {
    await ctx.reply('–ö—É!');
    ctx.reply('Send me your number please', {
      reply_markup: {
        keyboard: [[{ text: 'üì≤ Send phone number', request_contact: true }]],
      },
    });
  }

  @On('contact')
  async contact(ctx: Context) {
    console.log(ctx.message);
  }

  async notificate(userTgId: number[], message: string) {
    userTgId.map(
      async (item) => await this.bot.telegram.sendMessage(item, message),
    );
  }
}
// –ø–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ç
// –≤–∏–¥–æ—Å –∞–π—Ñ–æ–Ω
// FAQ —Ñ–æ—Ä–º–∞ DONE
// —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤ DONE
// –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–≤–∞—Ä–µ –∑–µ–ª—ë–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ DONE
// —Å—Ç—Ä–µ–ª–æ—á–∫–∞ –Ω–∞–≤–µ—Ä—Ö
// —É–±—Ä–∞—Ç—å –≤–∞—Ç—Å–∞–ø DONE
// –∑–∞–∫–∞–∑—ã DONE
// —à–∞–ø–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ DONE

// –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è –∫—Ä–∞—Å–∏–≤–∞—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è

// 3 –≤–∏–¥–µ–æ –∏ —Ç–µ—Å—Ç—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
